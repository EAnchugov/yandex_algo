Алгоритм поиска элемента в отсортированном массиве (векторе), использующий дробление массива на половины.
Работает на упорядоченном массиве

При любой реализации бинарного поиска можно допустить ошибку. Вот как минимизировать вероятность её появления:
Используйте полуинтервалы (left = 0, right = len(arr)), а не интервалы (когда правая граница включена).
Сформулируйте для себя инвариант. Для задачи выше он будет звучать как “arr[left] не превосходит искомый элемент, arr[right], наоборот, превосходит”. Тогда при чтении кода вы можете проверить этот инвариант.
Именно поэтому в примере кода выше мы вынесли проверку существования искомого элемента в отдельное условие. Если такого элемента в массиве не существует, то инвариант при инициализации не выполнялся бы и решение было бы некорректным.