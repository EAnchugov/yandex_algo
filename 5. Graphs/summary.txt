https://habr.com/ru/companies/otus/articles/568026/

На собеседовании могут встретиться задачи:
Определить, есть ли цикл в ориентированном графе.
Определить, есть ли цикл в неориентированном графе.
Найти топологическую сортировку вершин ориентированного графа.
Если у вас есть свободное время — можете повторить соответствующие алгоритмы.
Если времени не очень много — лучше потратить его на другие темы, поскольку данные задачи встречаются не очень часто.






Граф состоит из множества вершин V и множества рёбер E. Каждое ребро соединяет пару вершин из V. По аналогии с
    обозначениями из теории множеств пишут, что граф содержит V вершин и E рёбер.

Графы бывают:
    - ориентированные (направленные) и неориентированные (ненаправленные).
        Технически стандартные способы задания графов поддерживают только ориентированные рёбра.
        Поэтому, чтобы задать неориентированный граф, обычно для каждого ребра заводят два ориентированных.

    - Рёбра графов могут иметь веса, тогда граф называется взвешенным.
        Веса могут быть отрицательными, но это не наш случай.

    - Циклические и нециклические. Нециклические неориентированные графы называются деревьями.


    Ориентированные графы встречаются, когда у нас есть зависимости. Примеры: импорт модулей, зависимости в пакетных менеджерах.
    Допустим, мы устанавливаем пакет A, который зависит от пакетов B и C, которые, в свою очередь, тоже имеют какие-то зависимости.
    Если такой граф зависимостей ацикличен — всё хорошо, к нему можно применить алгоритм топологической сортировки и установить пакеты в этом порядке.
    Тогда при установке каждого следующего пакета все его зависимости будут установлены в системе. Если же цикл есть, то установить пакет A не получится.



Чтобы представить граф в памяти, его можно явно задать с помощью списка рёбер, матрицы смежности или списка смежных вершин.
Это классические способы, их обычно разбирают при изучении алгоритмов и структур данных, поэтому не будем на них подробно останавливаться.


Алгоритмы на графах
В реальной жизни графы встречаются часто, и на них можно считать разные интересные величины.
    На собеседованиях время сильно ограничено, поэтому задачи требуют только базовых навыков. Обычно в задаче требуется сделать что-то из следующего:
    - Проверить существование пути из одной вершины в другую или определить, является ли неориентированный граф связным.
    - Найти кратчайший путь в невзвешенном графе.
    - Найти кратчайший путь во взвешенном графе.
    Первая задача решается поиском в глубину или ширину, вторая — поиском в ширину, третья — алгоритмом Дейкстры.
    Это стандартные алгоритмы, поэтому мы не будем приводить их реализацию.